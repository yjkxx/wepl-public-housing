version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"nginx-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Creating deployment script...
      - |
        cat > deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "Getting current task definition..."
        TASK_DEFINITION_FAMILY=${ECS_TASK_DEFINITION_FAMILY:-${STACK_NAME}-task}
        echo "Using task definition family: $TASK_DEFINITION_FAMILY"
        
        TASK_DEFINITION=$(aws ecs describe-task-definition \
          --task-definition $TASK_DEFINITION_FAMILY \
          --region $AWS_DEFAULT_REGION \
          --query 'taskDefinition' \
          --output json)
        
        echo "Creating new task definition..."
        NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq \
          --arg IMAGE_URI "$1" \
          '.containerDefinitions[0].image = $IMAGE_URI | 
           del(.taskDefinitionArn) | del(.revision) | del(.status) | 
           del(.requiresAttributes) | del(.placementConstraints) | 
           del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
        
        echo "Registering new task definition..."
        NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
          --region $AWS_DEFAULT_REGION \
          --cli-input-json "$NEW_TASK_DEFINITION" \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)
        
        echo "New task definition registered: $NEW_TASK_DEF_ARN"
        
        echo "Updating ECS service..."
        ECS_SERVICE_NAME=${ECS_SERVICE_NAME:-${STACK_NAME}-service}
        ECS_CLUSTER_NAME=${ECS_CLUSTER_NAME:-${STACK_NAME}-cluster}
        
        aws ecs update-service \
          --region $AWS_DEFAULT_REGION \
          --cluster $ECS_CLUSTER_NAME \
          --service $ECS_SERVICE_NAME \
          --task-definition $NEW_TASK_DEF_ARN
        
        echo "ECS service update initiated successfully"
        EOF
      - chmod +x deploy.sh
      - ./deploy.sh $REPOSITORY_URI:$IMAGE_TAG

artifacts:
  files:
    - imagedefinitions.json

cache:
  paths:
    - '/root/.docker/**/*'
